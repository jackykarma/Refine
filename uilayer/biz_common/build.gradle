plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

apply from: "$rootDir/gradle/depsext.gradle"
apply from: "$rootDir/gradle/appcommon.gradle"
apply from: "$rootDir/gradle/libcommon.gradle"

android {
    namespace 'com.jacky.bizcommon'
}

dependencies {
    // TODO:基础设施库应该总是打包在base apk中，可以放在统一的位置，比如basebiz或app模块
    //  其他地方引用统一使用compileOnly，dfm多个依赖同一个project在此工程中也会编译报错，
    //  gradle 7.0.3不会报错，这可能是与版本有关系，但此种做法是最为稳妥的
    implementation project(":libarch")
    implementation project(":libutil")
    implementation project(":libtask")

    // 通用的标准库
    api "com.google.code.gson:gson:${versions.gsonVersion}"

    // 通用的基础的androidx库
    api "androidx.core:core-ktx:${versions.xcorektx}"
    api "androidx.appcompat:appcompat:${versions.xappcompat}"
    api "androidx.constraintlayout:constraintlayout:${versions.constrantlayout}"
    api "androidx.recyclerview:recyclerview:${versions.recyclerViewVersion}"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycleVersion}"
    api "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycleVersion}"
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:${versions.lifecycleVersion}"

    // 通用的google官方库
    api "com.google.android.material:material:${versions.googlematerrial}"

    // 单元测试和接口测试依赖库
    testApi "junit:junit:${versions.junit}"
    androidTestApi "androidx.test.ext:junit:${versions.xjunit}"
    api "androidx.test.ext:junit-ktx:${versions.xjunit}"
    androidTestApi "androidx.test.espresso:espresso-core:${versions.espresso}"

    // ARouter路由标准库
    api("com.alibaba:arouter-api:${versions.arouter}") {
        // 方法二：开启兼容模式也可以解决问题，无需exclude.在gradle.properties中配置android.enableJetifier=true
        // 解决：arouter-api引入的support库，而不是androidx库，因此有冲突，需要移除
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-core-ui'
        exclude group: 'com.android.support', module: 'support-v4'
        // 解决 2 files found with path 'META-INF/androidx.legacy_legacy-support-core-utils.version'.
        exclude group: 'com.android.support', module: 'support-core-utils'
        // 使用上面的库exclude替代下面一个个的子库排除方法
        // exclude group: 'com.android.support', module: 'versionedparcelable'
        // 解决：2 files found with path 'META-INF/androidx.localbroadcastmanager_localbroadcastmanager.version' from inputs:
        // exclude group: 'com.android.support', module: 'localbroadcastmanager'
        // 解决：2 files found with path 'META-INF/androidx.cursoradapter_cursoradapter.version'.
        // exclude group: 'com.android.support', module: 'cursoradapter'
        // 解决：2 files found with path 'META-INF/androidx.drawerlayout_drawerlayout.version'.
        // exclude group: 'com.android.support', module: 'drawerlayout'
        // 解决:2 files found with path 'META-INF/androidx.print_print.version'.
        // exclude group: 'com.android.support', module: 'print'
        // 2 files found with path 'META-INF/androidx.interpolator_interpolator.version'.
        // exclude group: 'com.android.support', module: 'interpolator'
        // 2 files found with path 'META-INF/androidx.fragment_fragment.version'.
        // exclude group: 'com.android.support', module: 'support-fragment'
        // 2 files found with path 'META-INF/androidx.customview_customview.version'.
        // exclude group: 'com.android.support', module: 'customview'
        // 2 files found with path 'META-INF/androidx.documentfile_documentfile.version'.
        // exclude group: 'com.android.support', module: 'documentfile'
        //
        // 2 files found with path 'META-INF/androidx.viewpager_viewpager.version'.
        // exclude group: 'com.android.support', module: 'viewpager'
    }
}